// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Поддержка API",
            "url": "https://github.com/shuklarituparn",
            "email": "rtprnshukla@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/actors/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Актеры"
                ],
                "summary": "Получить всех актеров с пагинацией",
                "operationId": "read-all-actors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Количество элементов на странице",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки (по умолчанию birth_date)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Порядок сортировки (ASC или DESC, по умолчанию DESC)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список актеров",
                        "schema": {
                            "$ref": "#/definitions/controllers.ReadAllActorResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный размер страницы или номер страницы",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/actors/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Актеры"
                ],
                "summary": "Создать нового актера",
                "operationId": "create-actor",
                "parameters": [
                    {
                        "description": "Объект актера, который нужно создать",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateActorModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Актер добавлен",
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateActorResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/actors/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Актеры"
                ],
                "summary": "Удалить актера",
                "operationId": "delete-actor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор актера",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Актер успешно удален",
                        "schema": {
                            "$ref": "#/definitions/controllers.DeleteActorResponse"
                        }
                    },
                    "400": {
                        "description": "Требуется идентификатор актера",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Не удалось удалить актера или его связи",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/actors/get": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Актеры"
                ],
                "summary": "Получить актера по идентификатору",
                "operationId": "read-actor-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор актера",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подробности актера",
                        "schema": {
                            "$ref": "#/definitions/controllers.ReadActorResponse"
                        }
                    },
                    "400": {
                        "description": "Необходим идентификатор актера",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Актер не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении актера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/actors/patch": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Актеры"
                ],
                "summary": "Частично обновить существующего актера",
                "operationId": "patch-actor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор актера",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Данные для частичного обновления актера",
                        "name": "patchData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateActorModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Актер успешно обновлен",
                        "schema": {
                            "$ref": "#/definitions/controllers.PatchActorResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить актера или его связи",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/actors/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Актеры"
                ],
                "summary": "Обновить существующего актера",
                "operationId": "update-actor",
                "parameters": [
                    {
                        "description": "Объект актера для обновления",
                        "name": "actor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateActorModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Актер успешно обновлен",
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateActorResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить актера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/movies/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Получить все фильмы с пагинацией",
                "operationId": "read-all-movies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Количество элементов на странице",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки (по умолчанию рейтинг)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Порядок сортировки (ASC или DESC, по умолчанию DESC)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список фильмов",
                        "schema": {
                            "$ref": "#/definitions/controllers.ReadAllMoviesResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный размер страницы или номер страницы",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/movies/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Создать новый фильм",
                "operationId": "create-movie",
                "parameters": [
                    {
                        "description": "Объект фильма для создания",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateMovieModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Фильм успешно создан",
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/movies/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Удалить фильм",
                "operationId": "delete-movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор фильма",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильм успешно удален",
                        "schema": {
                            "$ref": "#/definitions/controllers.DeleteMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Требуется идентификатор фильма",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Не удалось удалить фильм или его связи",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/movies/get": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Получить фильм по идентификатору",
                "operationId": "read-movie-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор фильма",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подробности фильма",
                        "schema": {
                            "$ref": "#/definitions/controllers.ReadMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Требуется идентификатор фильма",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Фильм не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении фильма",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/movies/patch": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Частично обновить существующий фильм",
                "operationId": "patch-movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор фильма",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Данные для частичного обновления фильма",
                        "name": "patchData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateMovieModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильм успешно обновлен",
                        "schema": {
                            "$ref": "#/definitions/controllers.PatchMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить фильм или его связи",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/movies/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Обновить существующий фильм",
                "operationId": "update-movie",
                "parameters": [
                    {
                        "description": "Объект фильма для обновления",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMovieModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильм успешно обновлен",
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить фильм",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск Фильмов"
                ],
                "summary": "Поиск фильмов",
                "operationId": "search-movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки (по умолчанию рейтинг)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Порядок сортировки (ASC или DESC, по умолчанию DESC)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список совпадающих фильмов",
                        "schema": {
                            "$ref": "#/definitions/controllers.SearchMovieResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный поисковый запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при кодировании ответа",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/users/login": {
            "post": {
                "description": "Вход пользователя с использованием электронной почты и пароля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Учетные данные пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginUserModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный вход в систему",
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Неверная электронная почта или пароль",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/refresh": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновление доступа и обновления токенов JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Обновление токенов JWT",
                "responses": {
                    "200": {
                        "description": "Новые токены доступа и обновления",
                        "schema": {
                            "$ref": "#/definitions/controllers.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный или истекший токен",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/register": {
            "post": {
                "description": "Зарегистрировать нового пользователя с помощью электронной почты и пароля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Зарегистрировать нового пользователя",
                "parameters": [
                    {
                        "description": "Информация о пользователе",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterUserModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно создан",
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Healthcheck"
                ],
                "summary": "Выполнить проверку состояния",
                "operationId": "health-check",
                "responses": {
                    "200": {
                        "description": "Ответ на проверку состояния",
                        "schema": {
                            "$ref": "#/definitions/controllers.HealthCheckResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CreateActorResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.CreateMovieResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Movie"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.CreateUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "controllers.DeleteActorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.DeleteMovieResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controllers.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "current_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "controllers.PatchActorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.PatchMovieResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.ReadActorResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Actor"
                }
            }
        },
        "controllers.ReadAllActorResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Actor"
                    }
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "controllers.ReadAllMoviesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "controllers.ReadMovieResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Movie"
                }
            }
        },
        "controllers.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "refresh": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "controllers.SearchMovieResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                }
            }
        },
        "controllers.UpdateActorResponse": {
            "type": "object",
            "properties": {
                "actor": {
                    "$ref": "#/definitions/models.Actor"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.UpdateMovieResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Movie"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Actor": {
            "type": "object",
            "required": [
                "birth_date",
                "first_name",
                "gender",
                "last_name"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                }
            }
        },
        "models.CreateActorModel": {
            "type": "object",
            "required": [
                "birth_date",
                "first_name",
                "gender",
                "last_name"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                }
            }
        },
        "models.CreateMovieModel": {
            "type": "object",
            "required": [
                "rating",
                "title"
            ],
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Actor"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "genre": {
                    "type": "string"
                },
                "rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "release_year": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        },
        "models.LoginUserModel": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "models.Movie": {
            "type": "object",
            "required": [
                "genre",
                "rating",
                "release_year",
                "title"
            ],
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Actor"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 1
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "release_year": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        },
        "models.RegisterUserModel": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "models.UpdateActorModel": {
            "type": "object",
            "required": [
                "birth_date",
                "first_name",
                "gender",
                "id",
                "last_name"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                }
            }
        },
        "models.UpdateMovieModel": {
            "type": "object",
            "required": [
                "id",
                "rating",
                "title"
            ],
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Actor"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "release_year": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Filmotek API",
	Description:      "Документация API Filmotek",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
